apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "com.dorongold.task-tree"
apply plugin: 'com.eden.orchidJavadocPlugin'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

project.group = rootProject.group
project.version = rootProject.version

apply from: "$rootDir/gradle/orchid.gradle"
apply from: "$rootDir/gradle/javadoc.gradle"
apply from: "$rootDir/gradle/publish.gradle"

dependencies {
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

// Kotlin
//----------------------------------------------------------------------------------------------------------------------

apply plugin: "kotlin"

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

// Testing
//----------------------------------------------------------------------------------------------------------------------

apply plugin: 'jacoco'

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = project.hasProperty("showTestLogs")
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
check.dependsOn jacocoTestReport

task checkForExtensionFile {
    onlyIf {
        project.name != "OrchidCore"
    }
    doLast {
        def extensionName = project.name.toString()
        def extensionType = project.parent.name.toString()
        if(extensionType == 'languageExtensions') {
            extensionType = 'plugins'
        }
        def fullExtensionFilename = "${rootProject.rootDir}/OrchidCore/src/orchid/resources/pages/${extensionType}/${extensionName}/index.md"
        def extensionFile = file(fullExtensionFilename)

        if(!extensionFile.exists()) {
            throw new FileNotFoundException("There is no plugin entry for this plugin, expected 'pages/${extensionType}/${extensionName}/index.md' to exist in OrchidCore Orchid resources.")
        }
    }
}
check.dependsOn checkForExtensionFile